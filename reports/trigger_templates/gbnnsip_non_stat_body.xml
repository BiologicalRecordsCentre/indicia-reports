<report
    title="Non-statutory body events"
    description="Notifies GBNNSIP people not in a statutory body of alert species record verifications. Linked record details page will only work for non-confidential records."
>
  <query>
    SELECT 'system' as username, 'https://www.brc.ac.uk/gbnnsip/record/permitted-details?group_id=' || g.id::text || '&amp;occurrence_id=' || o.id::text as id,
      CASE
        WHEN oc.record_status IS NULL THEN
          'Record ' || o.id::text || ' of ' || cttl.preferred_taxon || ' was released (action=' || oc.comment || '). '
        ELSE
          'Record ' || o.id::text || ' of ' || cttl.preferred_taxon || ' was flagged as ' ||
          CASE oc.record_status || COALESCE(oc.record_substatus::text, null)
            WHEN 'V' THEN 'accepted'
            WHEN 'V1' THEN 'accepted - correct'
            WHEN 'V2' THEN 'accepted - considered correct'
            WHEN 'C3' THEN 'plausible'
            ELSE 'unknown status'
          END
      END || ' You are being notified because you are a member of ' || g.title || '.' as event,
      string_agg(gu.user_id::text, ',') as notify_user_ids,
      CASE
        WHEN wm.id IS NULL THEN NULL
        ELSE 'Notification sent to ' || STRING_AGG(COALESCE(p.first_name || ' ', '') || p.surname, ', ') || ': ' || CASE
          WHEN oc.record_status IS NULL THEN
            'Record ' || o.id::text || ' of ' || cttl.preferred_taxon || ' was released (action=' || oc.comment || '). '
          ELSE
            'Record ' || o.id::text || ' of ' || cttl.preferred_taxon || ' was flagged as ' ||
            CASE oc.record_status || COALESCE(oc.record_substatus::text, null)
              WHEN 'V' THEN 'accepted'
              WHEN 'V1' THEN 'accepted - correct'
              WHEN 'V2' THEN 'accepted - considered correct'
              WHEN 'C3' THEN 'plausible'
              ELSE 'unknown status'
            END
        END || ' You are being notified because you are a member of ' || g.title || '.'
      END as log_comment,
      o.id as occurrence_id,
      o.website_id
    from groups g
    join filters f on f.id=g.filter_id and f.deleted=false
    join groups_users gu on gu.group_id=g.id and gu.deleted=false
    join cache_taxa_taxon_lists cttl on string_to_array(trim(both '"' from (f.definition::json-&gt;'taxa_taxon_list_list')::text), ',') @&gt; ARRAY[cttl.id::text]
    join cache_occurrences_functional o on o.taxa_taxon_list_external_key=cttl.external_key
      and (f.definition::json-&gt;&gt;'indexed_location_list' is null or o.location_ids &amp;&amp; string_to_array(trim(both '"' from (f.definition::json-&gt;'indexed_location_list')::text), ',')::integer[])
      and o.updated_on&gt;'#date#'::date - '2 days'::interval
    left join locations l on l.id = ANY(string_to_array(trim(both '"' from (f.definition::json-&gt;'indexed_location_list')::text), ',')::integer[])
    /* double check against full precision record */
	  join samples s on s.id=o.sample_id and (f.definition::json-&gt;&gt;'indexed_location_list' is null or st_intersects(s.geom, l.boundary_geom))
    join occurrence_comments oc on oc.occurrence_id=o.id and oc.deleted=false
      and (oc.record_status='V' or oc.record_substatus=3)
      and oc.created_on&gt;'#date#'::date - '2 days'::interval
    left join occurrence_comments ocdone on ocdone.occurrence_id=o.id and ocdone.deleted=false
      and ocdone.comment like '%You are being notified because you are a member of ' || g.title || '.'
      and ocdone.created_on&gt;oc.created_on
    join users u on u.id=gu.user_id and u.deleted=false
    join people p on p.id=u.person_id and p.deleted=false
    left join workflow_metadata wm on wm.key_value=cttl.external_key and wm.key='taxa_taxon_list_external_key' and wm.log_all_communications='t'
    where g.group_type_id=#group_type_id#
    and g.deleted=false
    and ocdone.id is null
    group by g.id, g.title, cttl.preferred_taxon, o.id, oc.record_status, oc.record_substatus, oc.comment, wm.id
  </query>
  <params>
    <param name="date" display="Date" description="Date/time of last check" datatype="datetime" />
    <param name="group_type_id" datatype="integer" description="ID of group type that will receive notifications." />
  </params>
  <columns>
    <column name="id" display="ID" />
    <column name="event" display="Event" />
    <column name="vicecounty" display="Vice county" datatype="text"
      sql="(SELECT string_agg(vc.name, '; ')
        FROM locations vc
        WHERE vc.location_type_id=15
        AND vc.name NOT LIKE '%+%'
        AND vc.id = ANY(o.location_ids))" />
    <column name="notify_user_ids" />
    <column name="log_comment" />
    <column name="occurrence_id" />
    <column name="website_id" visible="false" />
  </columns>
</report>