<report
    title="Statutory body events"
    description="Notifies statutory body members of alert species record verifications."
>
  <query>
    WITH
      recent_v_velutina AS (
        SELECT * FROM cache_occurrences_functional
        WHERE taxa_taxon_list_external_key='NHMSYS0020936646'
        AND updated_on&gt;'#date#'::date - '1 day'::interval
      ),
      stat_groups AS (
        SELECT g.id, g.title, f.definition
        FROM groups g
        JOIN filters f ON f.id=g.filter_id AND f.deleted=false
        WHERE g.group_type_id=#group_type_id#
        AND g.deleted=false
      )
    SELECT 'system' as username, 'https://www.brc.ac.uk/gbnnsip/record/permitted-stat-body-details?group_id=' || g.id::text || '&amp;occurrence_id=' || o.id::text as id,
      CASE
        WHEN wm.log_all_communications='f' THEN
          NULL
        ELSE
          'Notification sent to ' || STRING_AGG(COALESCE(p.first_name || ' ', '') || p.surname, ', ') || ': ' ||
          CASE
            WHEN oc.record_status IS NULL THEN
              'Record ' || o.id::text || ' of ' || COALESCE(cttld.preferred_taxon || ' (now redetermined as ' || cttl.preferred_taxon || ')', cttl.preferred_taxon) || ' was released (action=' || oc.comment || '). '
            ELSE
              'Record ' || o.id::text || ' of ' || COALESCE(cttld.preferred_taxon || ' (now redetermined as ' || cttl.preferred_taxon || ')', cttl.preferred_taxon) || ' was flagged as ' ||
              CASE oc.record_status || COALESCE(oc.record_substatus::text, '')
                WHEN 'V' THEN '"accepted"'
                WHEN 'V1' THEN '"accepted - correct"'
                WHEN 'V2' THEN '"accepted - considered correct"'
                WHEN 'C3' THEN '"plausible"'
                ELSE 'unknown status'
              END
          END ||
          CASE
            WHEN (o.record_status || COALESCE(o.record_substatus::text, ''))&lt;&gt;(oc.record_status || COALESCE(oc.record_substatus::text, '')) THEN
              ' but has since been flagged as ' ||
              CASE o.record_status || COALESCE(o.record_substatus::text, '')
                WHEN 'V' THEN '"accepted"'
                WHEN 'V1' THEN '"accepted - correct"'
                WHEN 'V2' THEN '"accepted - considered correct"'
                WHEN 'C' THEN '"unreviewed"'
                WHEN 'C3' THEN '"plausible"'
                WHEN 'R' THEN '"rejected"'
                WHEN 'R4' THEN '2rejected - unable to verify"'
                WHEN 'R5' THEN '"rejected - incorrect"'
                ELSE '"unknown status"'
              END
            ELSE ''
          END
          || '. You are being notified because you are a member of ' || g.title || '.'
      END as event,
      string_agg(gu.user_id::text, ',') as notify_user_ids,
      CASE
        WHEN wm.log_all_communications='f' THEN
          NULL
        ELSE
          'Notification sent to ' || STRING_AGG(COALESCE(p.first_name || ' ', '') || p.surname, ', ') || ': ' ||
          CASE
            WHEN oc.record_status IS NULL THEN
              'Record ' || o.id::text || ' of ' || COALESCE(cttld.preferred_taxon || ' (now redetermined as ' || cttl.preferred_taxon || ')', cttl.preferred_taxon) || ' was released (action=' || oc.comment || '). '
            ELSE
              'Record ' || o.id::text || ' of ' || COALESCE(cttld.preferred_taxon || ' (now redetermined as ' || cttl.preferred_taxon || ')', cttl.preferred_taxon) || ' was flagged as ' ||
              CASE oc.record_status || COALESCE(oc.record_substatus::text, '')
                WHEN 'V' THEN '"accepted"'
                WHEN 'V1' THEN '"accepted - correct"'
                WHEN 'V2' THEN '"accepted - considered correct"'
                WHEN 'C3' THEN '"plausible"'
                ELSE 'unknown status'
              END
          END ||
          CASE
            WHEN (o.record_status || COALESCE(o.record_substatus::text, ''))&lt;&gt;(oc.record_status || COALESCE(oc.record_substatus::text, '')) THEN
              ' but has since been flagged as ' ||
              CASE o.record_status || COALESCE(o.record_substatus::text, '')
                WHEN 'V' THEN '"accepted"'
                WHEN 'V1' THEN '"accepted - correct"'
                WHEN 'V2' THEN '"accepted - considered correct"'
                WHEN 'C' THEN '"unreviewed"'
                WHEN 'C3' THEN '"plausible"'
                WHEN 'R' THEN '"rejected"'
                WHEN 'R4' THEN '2rejected - unable to verify"'
                WHEN 'R5' THEN '"rejected - incorrect"'
                ELSE '"unknown status"'
              END
            ELSE ''
          END
          || '. You are being notified because you are a member of ' || g.title || '.'
      END as log_comment,
      o.id as occurrence_id,
      o.website_id
    FROM recent_v_velutina o
    JOIN stat_groups g
      ON (g.definition::json-&gt;&gt;'indexed_location_list' IS NULL OR o.location_ids &amp;&amp; string_to_array(trim(both '"' from (g.definition::json-&gt;'indexed_location_list')::text), ',')::integer[])
    JOIN groups_users gu ON gu.group_id=g.id AND gu.deleted=false
    JOIN cache_taxa_taxon_lists cttl ON cttl.id = ANY(STRING_TO_ARRAY(TRIM(BOTH '"' FROM (g.definition::json-&gt;'taxa_taxon_list_list')::text), ',')::integer[])
    LEFT JOIN locations l ON l.id = ANY(STRING_TO_ARRAY(TRIM(BOTH '"' FROM (g.definition::json-&gt;'indexed_location_list')::text), ',')::integer[])
    /* double check against full precision record */
	  JOIN SAMPLES s ON s.id=o.sample_id AND (g.definition::json-&gt;&gt;'indexed_location_list' IS NULL OR st_intersects(s.geom, l.boundary_geom))
    JOIN occurrence_comments oc ON oc.occurrence_id=o.id AND oc.deleted=false
      AND (oc.record_status='V' or oc.record_substatus=3)
    LEFT JOIN occurrence_comments ocdone ON ocdone.occurrence_id=o.id AND ocdone.deleted=false
      AND ocdone.comment like '%You are being notified because you are a member of ' || g.title || '.'
      AND ocdone.created_on&gt;oc.created_on
    JOIN users u ON u.id=gu.user_id AND u.deleted=false
    JOIN people p ON p.id=u.person_id AND p.deleted=false
    JOIN workflow_metadata wm ON wm.key_value=cttl.external_key AND wm.key='taxa_taxon_list_external_key' AND wm.deleted=false
    -- are there any redeterminations since the verification comment was added? If so, need to work out what the taxon was
    -- at the point it was verified.
    LEFT JOIN determinations d ON d.occurrence_id=o.id AND d.deleted=false AND d.updated_on&gt;oc.created_on
      AND d.id = (select min(id) from determinations where occurrence_id=o.id AND deleted=false AND updated_on&gt;oc.created_on)
    LEFT JOIN cache_taxa_taxon_lists cttld ON cttld.id=d.taxa_taxon_list_id
    WHERE ocdone.id is null
    GROUP BY g.id, g.title, cttl.preferred_taxon, cttld.preferred_taxon,
      o.id, o.record_status, o.record_substatus, o.website_id,
      oc.record_status, oc.record_substatus, oc.comment, wm.id
  </query>
  <params>
    <param name="date" display="Date" description="Date/time of last check" datatype="datetime" />
    <param name="group_type_id" datatype="integer" description="ID of group type that will receive notifications." />
  </params>
  <columns>
    <column name="id" display="ID" />
    <column name="event" display="Event" />
    <column name="vicecounty" display="Vice county" datatype="text"
      sql="(SELECT string_agg(vc.name, '; ')
        FROM locations vc
        WHERE vc.location_type_id=15
        AND vc.name NOT LIKE '%+%'
        AND vc.id = ANY(o.location_ids))" />
    <column name="notify_user_ids" />
    <column name="log_comment" />
    <column name="occurrence_id" />
    <column name="website_id" visible="false" />
  </columns>
</report>