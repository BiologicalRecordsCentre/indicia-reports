<report
    title="Locations list"
    description="A general purpose list of locations."
>
  <query website_filter_field="lw.website_id">
  SELECT #columns#
  FROM locations l
  LEFT JOIN locations_websites lw on lw.location_id=l.id AND lw.deleted=false
  LEFT JOIN (termlists_terms ttl1
    JOIN terms tinput ON tinput.id=ttl1.term_id
    JOIN termlists_terms ttl2 ON ttl2.meaning_id=ttl1.meaning_id
    JOIN terms t ON t.id=ttl2.term_id
  ) ON ttl1.id=l.location_type_id
  #joins#
  WHERE l.deleted=false
  AND #website_filter#
  AND (CAST(l.location_type_id AS character varying)='#location_type_id#' OR '#location_type_id#'='' OR t.term='#location_type_id#')
  #order_by#
  </query>
  <order_bys>
    <order_by>l.name ASC</order_by>
  </order_bys>
  <params>
    <param name='location_type_id' display='Location Type' description='Select the location type, or leave blank to not filter by location type.' datatype='lookup'
            population_call='report:library/terms/terms_list:id:term:termlist_external_key=indicia:location_types,termlist_id=' />
    <param name='locattrs' display='Location attribute list' description='Comma separated list of location attribute IDs to include' datatype='locattrs' />
  </params>
  <columns>
    <column name="location_id" display="ID" sql="l.id" />
    <column name="parent_id" display="Route ID" sql="l.parent_id" />
    <column name="name" display="Name" sql="l.name" />
    <column name="location_type_id" visible="false" sql="l.location_type_id" />
    <column name="location_type" display="Type" sql="tinput.term" />
    <column name="centroid_sref" display="Centroid" sql="l.centroid_sref" />
    <column name="centroid_sref_system" visible="false" sql="l.centroid_sref_system" />
    <column name="geom" visible="false" sql="st_astext(coalesce(l.boundary_geom, l.centroid_geom))" />
  </columns>
</report>
