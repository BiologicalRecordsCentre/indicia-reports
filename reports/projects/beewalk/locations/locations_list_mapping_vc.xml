<?xml version="1.0" encoding="UTF-8"?>

<report title="List of locations for mapping"
        description="Basic list of locations designed for mapping.">
  <query website_filter_field="lw.website_id">
    SELECT #columns#
    FROM locations l
    LEFT JOIN locations_websites lw ON lw.location_id=l.id AND lw.deleted=false
    JOIN cache_termlists_terms t ON t.sort_order::text=l.code AND t.termlist_id=12
    #joins#
    WHERE l.deleted=false
    AND (l.public=true or lw.website_id in (#website_ids#))
      #filters#
  </query>
  <params>
      <param name="location_type_id" display="Location type(s)" datatype="lookup"
        description="Select the location type, or leave blank to not filter by location type."
        population_call="report:library/terms/terms_list:id:term:termlist_external_key=indicia:location_types,termlist_id=" >
          <where>l.location_type_id in (#location_type_id#)</where>
      </param>
      <param name="simplifyFeatureTo" datatype="integer" default="1" />
      <param name="bounds" display="Bounds WKT" description="Well known text for the bounding box to load" datatype="text" default="">
        <where>st_intersects(l.boundary_geom, st_geomfromtext('#bounds#', 900913))</where>
      </param>
      <param name="strokewidth" default="1" datatype="integer" />
      <param name="parent_id" default="" datatype="integer" description="ID of the parent site to filter to">
          <where>l.parent_id=#parent_id#</where>
      </param>
      <param name="parent_boundary_id" default="" datatype="integer" description="ID of the parent site to filter to">
          <join>join locations lp on lp.deleted=false and lp.id=#parent_boundary_id#</join>
          <where>st_intersects(lp.boundary_geom, l.boundary_geom)</where>
      </param>
      <param name="exclude_composites" display="Exclude composite locations" datatype="boolean" default="0"
             description="Ignore composition locations (which have a + in their code field), e.g. combined vice counties
             such as Sussex">
        <where>(l.code is null or l.code not like '%+%')</where>
      </param>
  </params>
  <columns>
        <column name="id" visible="false" sql="l.id" datatype="integer" />
        <column name="term_id" visible="false" sql="t.id" datatype="integer" />
        <column name="name" display="Site name" sql="l.name" />
        <column name="code" display="Site code" sql="l.code" />
        <column name="geom" display="Boundary" sql="st_astext(ST_SnapToGrid(ST_Simplify(COALESCE(l.boundary_geom, l.centroid_geom), #simplifyFeatureTo#), #simplifyFeatureTo#, #simplifyFeatureTo#))" visible="false" mappable="true"/>
        <column name="pr" visible="false" feature_style="pointRadius" sql="1" />
        <column name="sw" visible="false" feature_style="strokeWidth" sql="3" />
        <column name="so" visible="false" feature_style="strokeOpacity" sql="0.8" />
        <column name="fo" visible="false" feature_style="fillOpacity" sql="0.15" />
        <column name="sc" visible="false" feature_style="strokeColor" sql="'#ff0000'" />
  </columns>
</report>