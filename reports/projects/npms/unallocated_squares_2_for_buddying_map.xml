<report
    title="Unallocated Squares 2 For Buddying Map"
    description="Map showing monads (squares) where the ones that have a user allocation are shown in a different colour to the ones that don't.
    Squares available for buddying are displayed in green.
    Additionally provides a column to link to Site Details page."
>
  <query website_filter_field="lw.website_id">
  SELECT #columns#
  FROM locations l
    LEFT JOIN locations_websites lw on lw.location_id=l.id AND lw.deleted=false
    LEFT JOIN person_attribute_values pavSquare on pavSquare.int_value=l.id AND pavSquare.person_attribute_id=#user_square_attr_id# AND pavSquare.deleted=false
    LEFT JOIN person_attribute_values pavBuddy on pavBuddy.int_value=l.id AND pavBuddy.person_attribute_id=#buddying_attr_id# AND pavBuddy.deleted=false
    LEFT JOIN location_attribute_values lavEx on lavEx.location_id=l.id AND lavEx.location_attribute_id=#excluded_square_attr_id# AND lavEx.deleted=false
  WHERE 
    (l.location_type_id=#core_square_type_id#)  
    AND #website_filter# AND (lavEx.int_value != 1 OR lavEx.int_value IS NULL) AND l.deleted=false
    AND (#distance_from_post_code# != 0 OR '#return_all_squares#'='true')
    #idlist#
  </query>
  <order_bys>
    <order_by>count ASC</order_by>
  </order_bys>
  <params>
    <param name='core_square_type_id' display='Core Square Type Id' description='' datatype='integer'/>
    <param name='buddying_attr_id' display='Buddying Attribute ID' description='Id of the person attribute that holds if a volunteer is willing to buddy' datatype='integer'/>
    <param name='user_square_attr_id' display='' description='Id of the person attribute that holds user squares' datatype='integer'/>
    <param name="ignore_square_dates_before" display="Ignore Square Dates Before" description="Ignore any sqaures created before this date.
        Useful if old squares are left on the system but are not currently active." datatype="date" emptyvalue="" default="">
      <where>l.created_on &gt;= CAST(COALESCE('#ignore_square_dates_before#','1500-01-01') as date)</where>
    </param>
    <param name="post_code_geom" display="Post Code Geom" description="Post code geometry, so we only show squares closest to the user." emptyvalue='' default=''>
      <where>st_dwithin(ST_GeomFromText('#post_code_geom#',3857), ST_Transform(l.centroid_geom,3857), #distance_from_post_code#)</where>
    </param>
    <param name="distance_from_post_code" display="Distance from post code" description="The distance to return items from the specified post code." datatype="integer" default='0' emptyvalue='0'/>
    <param name="excluded_square_attr_id" display="Excluded squares attribute id" description="Id of attribute that holds whether a square is excluded or not. If it is excluded then don't display on the map." datatype="integer"/>
    <param name="return_all_squares" display="Return all squares" description="If true, return all squares else return nothing or return squares using the post code search."  default='' emptyvalue=''/>
    <param name='idlist' display='List of IDs' description='Allow map click to filter grid.' datatype='idlist' fieldname='l.id' alias='id' />
  </params>
  <columns> 
    <column name='id' sql='l.id' datatype='integer' visible='false' in_count="true"/>  
    <column name='entered_sref' display='Grid Ref' sql="regexp_replace(l.centroid_sref, ',[^ ]', ', ', 'g')" datatype='text' visible="false"/>
    <column name='entered_sref_with_link' display='Grid Ref' sql="regexp_replace(l.centroid_sref, ',[^ ]', ', ', 'g')" datatype='text' 
      template="&lt;a href=&quot; site-details?gr={entered_sref_with_link} &quot;&gt;{entered_sref_with_link}&lt;/a&quot;" />
    <column name='count' sql='count(distinct(pavSquare.id))' display='Number of allocated users' datatype='integer' aggregate="true"/>
    <column name='gn' visible='false' feature_style="graphicName" sql="'square'" aggregate="true"/>    
    <column name="sc" visible="false" feature_style="strokeColor" sql="
      CASE 
      WHEN count(distinct(pavSquare.id)) = 0 THEN 'blue' 
      WHEN count(distinct(pavSquare.id)) > 0 AND count(distinct(pavBuddy.id)) > 0 THEN 'green'
      ELSE '#FFA62F' END" aggregate="true"/>
    <column name="fc" visible="false" feature_style="fillColor" sql="
      CASE 
      WHEN count(distinct(pavSquare.id)) = 0 THEN 'blue' 
      WHEN count(distinct(pavSquare.id)) > 0 AND count(distinct(pavBuddy.id)) > 0 THEN 'green'
      ELSE '#FFA62F' END" aggregate="true"/>
    <column name="geom" visible="false" mappable="true" sql="st_astext(coalesce(l.boundary_geom,l.centroid_geom))" />
  </columns>
</report>