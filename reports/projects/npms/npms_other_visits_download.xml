<report
    title="NPMS Other Visits Download"
    description="Download a list of visits created by other users for plots you currently have rights to."
>
  <query website_filter_field="" training_filter_field="csf.training" >
    SELECT distinct #columns#
      FROM users u
      JOIN person_attribute_values pav
        ON pav.person_id = u.person_id
        AND pav.person_attribute_id = #person_square_attr_id#
        AND pav.updated_by_id &lt;&gt; u.id
        AND pav.deleted = false
      JOIN locations plot
        ON plot.parent_id=pav.int_value
        AND plot.deleted=false
      JOIN locations square
        ON square.id=plot.parent_id
        AND square.deleted=false
      JOIN cache_samples_functional csf
        ON csf.location_id = plot.id
        AND csf.survey_id in (#survey_ids#)
        AND csf.created_by_id!=#current_user#
      JOIN cache_samples_nonfunctional csnf on csnf.id = csf.id
      LEFT JOIN location_attribute_values lavPlotName on lavPlotName.location_attribute_id=#plot_number_attr_id# AND lavPlotName.location_id=plot.id AND lavPlotName.deleted=false
      JOIN cache_termlists_terms cache_ttPlotType on cache_ttPlotType.id = plot.location_type_id
      #agreements_join#
      WHERE #sharing_filter# 
        AND u.id=#current_user#
        AND (trim('#date_from#')='' OR '#date_from#'='Click here' OR csf.date_end &gt;= CAST(COALESCE('#date_from#','1500-01-01') as date))
        AND (trim('#date_to#')='' OR '#date_to#'='Click here' OR csf.date_start &lt;= CAST(COALESCE('#date_to#','1500-01-01') as date)) 
        AND csf.website_id in (#website_ids#)
       #order_by#
  </query>
  <order_bys>
    <order_by>sample_1_id desc, csf.id desc</order_by>
  </order_bys>
  <params>
    <param name="current_user" display="Current User ID" description="Current user's warehouse ID. Allows a column to be output indicating that the user owns the record." datatype="text" />
    <param name='person_square_attr_id' description='Id of the person attribute that holds user squares' datatype='integer'/>
    <param name='plot_number_attr_id' display='Plot number attribute Id' description='Id of the location attribute that holds the plot number label' datatype='int' default='0' empytvalue='0'/>
    <param name='date_from' display='Date From' datatype='date' />
    <param name='date_to' display='Date To' datatype='date' />
    <param name = "survey_ids" display="Survey IDS" description="Comma separated list of survey ids to limit the results to." datatype="text"/>
    <param name='vice_county_location_type_term' default='Vice County'
        preprocess="SELECT id FROM cache_termlists_terms WHERE termlist_title='Location types' AND term='#vice_county_location_type_term#'" />
    <param name="uploadFolder" display="Image upload folder" datatype="string" default=""
      description="Image upload folder on the warehouse including the trailing slash" />
    <param name = "habitat_smp_attr_id" display="Habitat sample attribute ID" description = "ID of the sample attribute that holds the habitat value." datatype="integer"/>
  </params>
  <columns>
    <column name='id' sql='csf.id' display='ID' in_count="true"/>
    <column name='survey' display='Survey' sql='csnf.survey_title' datatype='text'/>
    <column name='survey_number' sql="
      case when ((csnf.attrs_json->>'227')::integer IS NOT NULL AND (csnf.attrs_json->>'227')::integer != 0) THEN 'Survey 2' 
      when ((csnf.attrs_json->>'227')::integer IS NULL OR (csnf.attrs_json->>'227')::integer = 0) THEN 'Survey 1'
      ELSE  '' END" display='Survey number'/>
    <column name='sample_1_id' sql="coalesce(case when (csnf.attrs_json->>'227')::integer != 0 then (csnf.attrs_json->>'227')::integer ELSE NULL END,csf.id)" display='ID' datatype="integer" visible='false'/>
    <column name='created_by_id' sql='csf.created_by_id' display='Created BY ID Sample' visible='false'/>
    <column name='square_name' sql="square.centroid_sref" display='Square'/>
    <column name="output_sref" sql="csnf.output_sref" display="Output map ref" datatype="text" />
    <column name='output_sref_projection' display='Output map ref projection' datatype='text'
        sql="case csnf.output_sref_system when '4326' then 'WGS84' when '27700' then 'OSGB36' else upper(csnf.output_sref_system) end" />
    <column name='lat' display='Latitude' sql="substring(st_astext(st_transform(st_centroid(csf.public_geom), 4326)) from E'POINT\\(.+ (.+)\\)')" datatype="text" />
    <column name='long' display='Longitude' sql="substring(st_astext(st_transform(st_centroid(csf.public_geom), 4326)) from E'POINT\\((.+) ')" datatype="text" />
    <column name="vicecounty_number" display="VC number" datatype="text"
      sql="(SELECT string_agg(vc.code, '; ')
        FROM locations vc
        WHERE vc.location_type_id=#vice_county_location_type_term#
        AND vc.name NOT LIKE '%+%'
        AND vc.id = ANY(csf.location_ids))" />
    <column name="vicecounty" display="Vice county" datatype="text"
      sql="(SELECT string_agg(vc.name, '; ')
        FROM locations vc
        WHERE vc.location_type_id=#vice_county_location_type_term#
        AND vc.name NOT LIKE '%+%'
        AND vc.id = ANY(csf.location_ids))" />
    <column name="habitat" display='Habitat' sql="(csnf.attrs_json->>('#habitat_smp_attr_id#'))::text" datatype="text" />
    <column name='date_start' sql='csf.date_start' visible="false"/>
    <column name='date_end' sql='csf.date_end' visible="false"/>
    <column name='date_type' sql='csf.date_type' visible="false"/>
    <column name='date' display='Date' datatype="date"/>
    <column name='sample_comment' display='Sample comment' sql="csnf.comment" datatype="text" />
    <column name='recorder' display='Recorder' sql="rtrim(csnf.recorders, ', ')" datatype="text" />
    <column name='images' display='Images' sql="case when csnf.media is null then null else '#uploadFolder#' || replace(csnf.media, ',', ', #uploadFolder#') end"/>
    <column name='input_date' sql='csf.created_on' display='Input on date' datatype='date' />
    <column name='last_edit_date' sql='csf.updated_on' display='Last edited on date' datatype='date' />
  </columns>
</report>
