<report
    title="Number of plots per species"
    description="Report returns a count of the number of distinct plots that individual taxa have been recorded against. 
When reporting on an individual taxon, the report will return data for any taxa with the same meaning, so it is possible to still see data in the report grid even if it doesn't include the exact taxon name that was searched for."
>
  <query website_filter_field="co.website_id">
  SELECT #columns#
  FROM cache_occurrences_functional co
    JOIN cache_taxa_taxon_lists cttl on cttl.id = co.taxa_taxon_list_id
    JOIN locations plot on plot.id=co.location_id AND plot.parent_id IS NOT NULL AND plot.deleted=false 
    #joins#
  WHERE 1=1 
    AND co.survey_id in (#limit_survey_ids#)
    AND co.date_start &gt;= CAST(COALESCE('#ignore_dates_before#','1500-01-01') as date)
    AND #website_filter#
    AND co.training = false
    #filters#
  </query>
  <order_bys>
    <order_by>cttl.taxon asc</order_by>
  </order_bys>
  <params>
    <param name="survey_id" display="Surveys" datatype="lookup" population_call='report:projects/npms/get_surveys_for_population_call:id:title' emptyvalue=''>
      <where>co.survey_id=#survey_id#</where>
    </param>
    <param name="taxa_taxon_list_id" display="Species" datatype="lookup" population_call='autocomplete:species' emptyvalue=''>
      <join>JOIN taxa_taxon_lists ttl on ttl.taxon_meaning_id=co.taxon_meaning_id AND ttl.deleted=false</join>
      <where>ttl.id = #taxa_taxon_list_id#</where>
    </param> 
    <param name="ignore_dates_before" display="Ignore Dates Before" description="Ignore samples whose date is before this date (we can ignore previous years data)." datatype="date"/>
    <param name="limit_survey_ids" display="Limit Survey IDs" description="Survey IDs to limit results to when all surveys are being returned by the user." datatype="text"/>
  </params>
  <columns> 
    <column name='taxon' display='Taxon' sql='cttl.taxon' datatype='text' in_count="true"/>
    <column name='plot_count' display='Plot Count' sql='count(distinct(plot.id))' datatype='integer' aggregate='true'/>
  </columns>
</report>