<report
    title="NPMS Other Occurrences"
    description="Display a list of occurrences created by other users for plots you currently have rights to.
Version of reports to be used for download link on grid."
>
  <query website_filter_field="" training_filter_field="cof.training" >
    SELECT distinct #columns#
      FROM users u
      JOIN person_attribute_values pav
        ON pav.person_id = u.person_id
        AND pav.person_attribute_id = #person_square_attr_id#
        AND pav.updated_by_id &lt;&gt; u.id
        AND pav.deleted = false
      JOIN locations plot
        ON plot.parent_id=pav.int_value
        AND plot.deleted=false
      JOIN locations square
        ON square.id=plot.parent_id
        AND square.deleted=false
      JOIN cache_samples_functional csf
        ON csf.location_id = plot.id
        AND csf.survey_id in (#survey_ids#)
      JOIN cache_samples_nonfunctional csnf on csnf.id = csf.id
      LEFT JOIN location_attribute_values lavPlotName on lavPlotName.location_attribute_id=#plot_number_attr_id# AND lavPlotName.location_id=plot.id AND lavPlotName.deleted=false
      JOIN cache_termlists_terms cache_ttPlotType on cache_ttPlotType.id = plot.location_type_id
      JOIN cache_occurrences_functional cof on cof.sample_id = csf.id
        AND cof.created_by_id!=#current_user#
      JOIN cache_occurrences_nonfunctional conf on conf.id=cof.id
      JOIN cache_taxa_taxon_lists cttl on cttl.id = cof.taxa_taxon_list_id
      #agreements_join#
      WHERE #sharing_filter# 
        AND u.id=#current_user#
        AND (trim('#date_from#')='' OR '#date_from#'='Click here' OR csf.date_end &gt;= CAST(COALESCE('#date_from#','1500-01-01') as date))
        AND (trim('#date_to#')='' OR '#date_to#'='Click here' OR csf.date_start &lt;= CAST(COALESCE('#date_to#','1500-01-01') as date)) 
        AND csf.website_id in (#website_ids#)
      #order_by#
  </query>
  <order_bys>
    <order_by>cof.id desc</order_by>
  </order_bys>
  <params>
    <param name="current_user" display="Current User ID" description="Current user's warehouse ID. Allows a column to be output indicating that the user owns the record." datatype="text" />
    <param name='person_square_attr_id' description='Id of the person attribute that holds user squares' datatype='integer'/>
    <param name='plot_number_attr_id' display='Plot number attribute Id' description='Id of the location attribute that holds the plot number label' datatype='int' default='0' empytvalue='0'/>
    <param name='date_from' display='Date From' datatype='date' />
    <param name='date_to' display='Date To' datatype='date' />
    <param name = "survey_ids" display="Survey IDS" description="Comma separated list of survey ids to limit the results to." datatype="text"/>    
    <param name='vice_county_location_type_term' default='Vice County'
      preprocess="SELECT id FROM cache_termlists_terms WHERE termlist_title='Location types' AND term='#vice_county_location_type_term#'" />
    <param name="uploadFolder" display="Image upload folder" datatype="string" default=""
      description="Image upload folder on the warehouse including the trailing slash" />
    <param name = "habitat_smp_attr_id" display="Habitat sample attribute ID" description = "ID of the sample attribute that holds the habitat value." datatype="integer"/>
    <param name = "wildflower_abundance_attr_id" display="Wildflower abundance occurrence attribute ID" description = "ID of the occurrence attribute that holds wildflower abundance." datatype="integer"/>
    <param name = "other_abundance_attr_id" display="Other (Indicator/Inventory) abundance occurrence attribute ID" description = "ID of the occurrence attribute that holds Indicator/Inventory abundance." datatype="integer"/>
  </params>
  <columns>
    <column name='id' sql='cof.id' display='ID' in_count="true" visible="false"/>
    <column name='taxon' sql='cttl.taxon' display='Taxon' />
    <column name='common' display='Common name'
      template="&lt;div class='zero-{zero_abundance}'&gt;{common}&lt;/div&gt;"
      sql="cttl.default_common_name" datatype='text' />
    <column name='family' display='Family' sql='cttl.family_taxon' datatype='text' />
    <column name="abundance" display='Abundance' sql="
      CASE WHEN 
        (conf.attrs_json->>('#wildflower_abundance_attr_id#'))::text IS NOT NULL 
      THEN 
        (conf.attrs_json->>('#wildflower_abundance_attr_id#'))::text 
      ELSE 
        (conf.attrs_json->>('#other_abundance_attr_id#'))::text
      END" datatype="text" />
    <column name="habitat" display='Habitat' sql="(csnf.attrs_json->>('#habitat_smp_attr_id#'))::text" datatype="text" />
    <column name="entered_sref" display="Original map ref" sql="csnf.public_entered_sref" datatype="text" />
    <column name='lat' display='Latitude' sql="substring(st_astext(st_transform(st_centroid(cof.public_geom), 4326)) from E'POINT\\(.+ (.+)\\)')" datatype="text" />
    <column name='long' display='Longitude' sql="substring(st_astext(st_transform(st_centroid(cof.public_geom), 4326)) from E'POINT\\((.+) ')" datatype="text" />
    <column name="vicecounty_number" display="VC number" datatype="text"
      sql="(SELECT string_agg(vc.code, '; ')
        FROM locations vc
        WHERE vc.location_type_id=#vice_county_location_type_term#
        AND vc.name NOT LIKE '%+%'
        AND vc.id = ANY(cof.location_ids))" />
    <column name="vicecounty" display="Vice county" datatype="text"
      sql="(SELECT string_agg(vc.name, '; ')
        FROM locations vc
        WHERE vc.location_type_id=#vice_county_location_type_term#
        AND vc.name NOT LIKE '%+%'
        AND vc.id = ANY(cof.location_ids))" />
    <column name="date" display="Date interpreted" datatype="date" />
    <column name="date_start" display="Date from" sql="cof.date_start" visible="false" />
    <column name="date_end" display="Date to" sql="cof.date_end" visible="false" />
    <column name='recorder' display='Recorder' sql="rtrim(csnf.recorders, ', ')" datatype="text" />
    <column name='determiner' display='Determiner' datatype="text"
      sql="CASE WHEN conf.attr_det_full_name IS NULL THEN
        CASE WHEN conf.attr_det_last_name IS NULL THEN NULL ELSE conf.attr_det_last_name || COALESCE(', ' || conf.attr_det_first_name, '') END
      ELSE conf.attr_det_full_name END" />
    <column name='certainty' display="Recorder certainty" sql="CASE cof.certainty WHEN 'C' THEN 'Certain' WHEN 'L' THEN 'Likely' WHEN 'U' THEN 'Uncertain' END" />
    <column name='record_comment' display='Comment' sql="conf.comment" datatype="text" />
    <column name='sample_comment' display='Sample comment' sql="csnf.comment" datatype="text" />
    <column name='images' display='Images' sql="case when conf.media is null then null else '#uploadFolder#' || replace(conf.media, ',', ', #uploadFolder#') end"/>
    <column name='input_date' sql='cof.created_on' display='Input on date' datatype='date' />
    <column name='last_edit_date' sql='cof.updated_on' display='Last edited on date' datatype='date' />
    <column name='record_status' display='Verification status 1'
        sql="CASE cof.record_status
        WHEN 'V' THEN 'Accepted'
        WHEN 'C' THEN 'Unconfirmed'
        WHEN 'R' THEN 'Rejected'
        WHEN 'I' THEN 'Input still in progress'
        WHEN 'D' THEN 'Queried'
        WHEN 'S' THEN 'Awaiting check'
        ELSE cof.record_status
        END" />
    <column name="record_substatus" display="Verification status 2"
        sql="CASE cof.record_status
        WHEN 'V' THEN
          CASE cof.record_substatus WHEN 1 THEN 'correct' WHEN 2 THEN 'Considered correct' ELSE NULL END
        WHEN 'C' THEN
          CASE cof.record_substatus WHEN 3 THEN 'Plausible' ELSE 'Not reviewed' END
        WHEN 'R' THEN
          CASE cof.record_substatus WHEN 4 THEN 'Unable to verify' WHEN 5 THEN 'Incorrect' ELSE NULL END
        ELSE NULL
        END" />
    <column name="query" display="Query" sql="case cof.query when 'A' then 'Answered' when 'Q' then 'Queried' end" />
    <column name='verifier' display='Verifier' sql='conf.verifier' datatype="text" />
    <column name='verified_on' display='Verified on' sql='cof.verified_on' datatype="text" />
    <column name='licence_code' sql='conf.licence_code' display="Licence" />
    <column name="autochecks" display="Automated checks"
      sql="CASE WHEN cof.data_cleaner_result='t' THEN 'pass' WHEN not cof.verification_checks_enabled THEN 'checks disabled' WHEN cof.data_cleaner_result IS NULL THEN 'pending' ELSE conf.data_cleaner_info END" />
  </columns>
</report>
