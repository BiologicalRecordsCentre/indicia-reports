<report
    title="NPMS Other Occurrences"
    description="Display a list of occurrences created by other users for plots you currently have rights to.
Version of reports to be used for download link on grid."
>
  <query website_filter_field="" training_filter_field="cof.training" >
    SELECT distinct #columns#
      FROM users u
      JOIN person_attribute_values pav
        ON pav.person_id = u.person_id
        AND pav.person_attribute_id = #person_square_attr_id#
        AND pav.updated_by_id &lt;&gt; u.id
        AND pav.deleted = false
      JOIN locations plot
        ON plot.parent_id=pav.int_value
        AND plot.deleted=false
      JOIN locations square
        ON square.id=plot.parent_id
        AND square.deleted=false
      JOIN cache_samples_functional csf
        ON csf.location_id = plot.id
        AND csf.survey_id in (#survey_ids#)
      JOIN cache_samples_nonfunctional csnf on csnf.id = csf.id
      LEFT JOIN location_attribute_values lavPlotName on lavPlotName.location_attribute_id=#plot_number_attr_id# AND lavPlotName.location_id=plot.id AND lavPlotName.deleted=false
      JOIN cache_termlists_terms cache_ttPlotType on cache_ttPlotType.id = plot.location_type_id
      JOIN cache_occurrences_functional cof on cof.sample_id = csf.id
        AND cof.created_by_id!=#current_user#
      JOIN cache_occurrences_nonfunctional conf on conf.id=cof.id
      JOIN cache_taxa_taxon_lists cttl on cttl.id = cof.taxa_taxon_list_id
      #agreements_join#
      WHERE #sharing_filter# 
        AND u.id=#current_user#
        AND (trim('#date_from#')='' OR '#date_from#'='Click here' OR csf.date_end &gt;= CAST(COALESCE('#date_from#','1500-01-01') as date))
        AND (trim('#date_to#')='' OR '#date_to#'='Click here' OR csf.date_start &lt;= CAST(COALESCE('#date_to#','1500-01-01') as date)) 
        AND csf.website_id in (#website_ids#)
      #order_by#
  </query>
  <order_bys>
    <order_by>cof.id desc</order_by>
  </order_bys>
  <params>
    <param name="current_user" display="Current User ID" description="Current user's warehouse ID. Allows a column to be output indicating that the user owns the record." datatype="text" />
    <param name='person_square_attr_id' description='Id of the person attribute that holds user squares' datatype='integer'/>
    <param name='plot_number_attr_id' display='Plot number attribute Id' description='Id of the location attribute that holds the plot number label' datatype='int' default='0' empytvalue='0'/>
    <param name='date_from' display='Date From' datatype='date' />
    <param name='date_to' display='Date To' datatype='date' />
    <param name = "survey_ids" display="Survey IDS" description="Comma separated list of survey ids to limit the results to." datatype="text"/>    
    <param name='vice_county_location_type_term' default='Vice County'
      preprocess="SELECT id FROM cache_termlists_terms WHERE termlist_title='Location types' AND term='#vice_county_location_type_term#'" />
    <param name="uploadFolder" display="Image upload folder" datatype="string" default=""
      description="Image upload folder on the warehouse including the trailing slash" />
    <param name = "wildflower_abundance_attr_id" display="Wildflower abundance occurrence attribute ID" description = "ID of the occurrence attribute that holds wildflower abundance." datatype="integer"/>
    <param name = "other_abundance_attr_id" display="Other (Indicator/Inventory) abundance occurrence attribute ID" description = "ID of the occurrence attribute that holds Indicator/Inventory abundance." datatype="integer"/>
  </params>
  <columns>
    <column name='id' sql='cof.id' display='ID' in_count="true" visible="false"/>
    <column name='sample_id' sql='csf.id' display='Sample ID' visible="false"/>
    <column name='taxon' sql='cttl.taxon' display='Taxon' />
    <column name='common' display='Common name'
      template="&lt;div class='zero-{zero_abundance}'&gt;{common}&lt;/div&gt;"
      sql="cttl.default_common_name" datatype='text' />
    <column name="abundance" display='Abundance' sql="
      CASE WHEN 
        (conf.attrs_json->>('#wildflower_abundance_attr_id#'))::text IS NOT NULL 
      THEN 
        (conf.attrs_json->>('#wildflower_abundance_attr_id#'))::text 
      ELSE 
        (conf.attrs_json->>('#other_abundance_attr_id#'))::text
      END" datatype="text" />
    <column name='plot_name'
      sql="
      COALESCE(
          case 
          when lavPlotName.text_value IS null 
            then '&lt;i&gt;' || 'Plot at ' || plot.centroid_sref || ' ('||  cache_ttPlotType.term || ') ' || '&lt;/i&gt;' 
          else 
            '&lt;i&gt;' || 'Plot ' || lavPlotName.text_value || ' at ' || plot.centroid_sref || ' ('||  cache_ttPlotType.term || ') ' || '&lt;/i&gt;' 
          end
          , csf.location_name, csnf.public_entered_sref)
      " display='Plot' />
    <column name="date" display="Date" datatype="date" />
    <column name="date_start" display="Date from" sql="cof.date_start" visible="false" />
    <column name="date_end" display="Date to" sql="cof.date_end" visible="false" />
    <column name='date_type' sql='cof.date_type' visible='false' />
    <column name='recorder' display='Recorder' sql="rtrim(csnf.recorders, ', ')" datatype="text" />
    <column name='images' display='Images' sql='conf.media' img='true' />
    <column name='input_form' visible="false" sql="case when csf.input_form is null then '#default_input_form#' else csf.input_form end" />
  </columns>
</report>
