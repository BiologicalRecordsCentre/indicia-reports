<report
    title="Species Richness Per broad Habitat"
    description="Return the average number of species found at each broad habitat. For instance a grass habitat
might have an average of 5 different species. This is made slightly more complicated because the habitat is held at sample level instead of location
level. Also each broad habitat can have child fine habitat, so for samples saved at a fine habitat, we need to work out what broad habitat category these fall into."
>
  <query website_filter_field="su.website_id">
    SELECT #columns#  
    FROM terms broadHab
      JOIN termlists_terms ttBroadHab ON ttBroadHab.term_id=broadHab.id AND ttBroadHab.deleted=false
        AND (ttBroadHab.id=#broad_habitat# OR #broad_habitat#=0)
        AND ttBroadHab.deleted=false 
      --Get all the termlists terms associated with the broad habitat, including the fine (child) habitats
      JOIN termlists_terms ttFineHab ON ttFineHab.parent_id=ttBroadHab.id AND ttFineHab.deleted=false
      JOIN sample_attribute_values sampHabVal on (sampHabVal.int_value=ttBroadHab.id OR sampHabVal.int_value=ttFineHab.id) AND sampHabVal.sample_attribute_id=#habitat_attr_id# AND sampHabVal.deleted=false
      JOIN samples samp on samp.id = sampHabVal.sample_id 
        AND (samp.date_start &gt;= CAST(COALESCE('#ignore_dates_before#','1500-01-01') as date) OR '#ignore_dates_before#'='')
        AND samp.deleted=false
        AND samp.training=false
      JOIN locations plot on plot.id = samp.location_id AND plot.deleted=false
      JOIN surveys su on su.id=samp.survey_id 
        AND (su.id=#survey_id# OR #survey_id#=0)
        AND su.deleted=false
        AND su.id in (#limit_survey_ids#) 
    LEFT JOIN occurrences o on o.sample_id = samp.id AND o.deleted = false
    LEFT JOIN taxa_taxon_lists ttl on ttl.id = o.taxa_taxon_list_id AND ttl.deleted=false
    WHERE broadHab.deleted=false AND broadHab.term!='Not in scheme'
      #filters#
      AND #website_filter#
    GROUP BY broadHab.term,ttBroadHab.id
  </query>
  <params>
    <param name='habitat_attr_id' display='Habitat Sample Attribute Id' description='Id of the sample attribute that holds the habitat.' datatype='integer'/>
    <param name='broad_habitat' display='Broad Scale Habitat' description='Restrict report to specific habitat.' datatype='lookup' emptyvalue='0'
        population_call='report:projects/npms/broad_habitats_for_population_call:id:term'/>   
    <param name='survey_id' display='Survey' description='Survey' datatype='lookup' population_call='report:projects/npms/get_surveys_for_population_call:id:title' emptyvalue='0'/>
    <param name="ignore_dates_before" display="Ignore Dates Before" description="Ignore samples whose date is before this date (we can ignore previous years data)" datatype="date" emptyvalue="" default=""/>
    <param name="limit_survey_ids" display="Limit Survey IDs" description="Comma separated list of survey ids to limit the results to." datatype="text"/>
  </params>
  <columns> 
    <column name='habitat' display='Habitat' sql="broadHab.term" datatype='text' in_count="true"/>
    <column name='habitat_abbr' display='Abbreviation' sql="
      CASE 
        WHEN broadHab.term='Arable margins' then 'AFM' 
        WHEN broadHab.term='Bog and wet heath' then 'BWH' 
        WHEN broadHab.term='Broadleaved woodland, hedges and scrub' then 'BW' 
        WHEN broadHab.term='Coast' then 'C' 
        WHEN broadHab.term='Freshwater' then 'FW'
        WHEN broadHab.term='Heathland' then 'H'
        WHEN broadHab.term='Lowland grassland' then 'LG'
        WHEN broadHab.term='Marsh and fen' then 'MF' 
        WHEN broadHab.term='Native pinewood and juniper scrub' then 'NPW'       
        WHEN broadHab.term='Rock outcrops, cliffs and scree' then 'ROCS'      
        WHEN broadHab.term='Upland grassland' then 'UG'       
        ELSE broadHab.term
      END" datatype='text'/>  
    <column name='total_plots' display='Number of plots' sql='count(distinct(plot.id))'/>
    <column name='total_samples' display='Samples' sql='count(distinct(samp.id))'/>
    <column name='total_species_richness' display='Species' sql='count(distinct(ttl.taxon_meaning_id))' datatype='float'/>
    <!-- The species richness is complicated by a few things.
    Firstly the plot habitat is actually only held at the sample level instead of the location itself.
    Secondly to calculate the richness of a plot we need a distinct list of the species at the plot.
    However as each habitat might have several plots, we can't just use the word distinct in the select statement as
    this will actually only count distinct species accross all the plots, not at individual plots, so we need a sub-query
    to select the distinct taxon meanings at the individual plots.
    -->
    <column name='mean_species_richness' display='Mean Richness' sql="
      (select round(avg(count_richness_per_plot),2)
         FROM
         (select plot2.id as plot_id, plot_counts.count as count_richness_per_plot
           FROM locations plot2
           JOIN samples samp2 on samp2.location_id=plot2.id AND samp2.deleted=false
             AND (samp2.date_start &gt;= CAST(COALESCE('#ignore_dates_before#','1500-01-01') as date) OR '#ignore_dates_before#'='')
           JOIN sample_attribute_values sampHabVal2 on sampHabVal2.sample_id=samp2.id AND sampHabVal2.sample_attribute_id=#habitat_attr_id# AND sampHabVal2.deleted=false
           JOIN termlists_terms ttDirectHab2 ON ttDirectHab2.id=sampHabVal2.int_value AND ttDirectHab2.deleted=false
           JOIN termlists_terms ttBroad2 ON (ttBroad2.id=ttDirectHab2.parent_id OR (ttBroad2.id=ttDirectHab2.id AND ttDirectHab2.parent_id IS NULL)) AND ttBroad2.deleted=false
             AND (ttBroad2.id=ttBroadHab.id)
             AND ttBroad2.deleted=false
           JOIN terms tBroad2 on tBroad2.id = ttBroad2.term_id AND tBroad2.term!='Not in scheme' AND tBroad2.deleted=false      
           JOIN surveys su2 on su2.id=samp2.survey_id AND su2.deleted=false
             AND (su2.id=#survey_id# OR #survey_id#=0) AND su2.id in (#limit_survey_ids#) 

           LEFT JOIN

            (select plot3.id as plot_id, count(distinct ttl3.taxon_meaning_id) as count
              FROM locations plot3
              JOIN samples samp3 on samp3.location_id = plot3.id AND samp3.deleted=false
                AND (samp3.date_start >= CAST(COALESCE('#ignore_dates_before#','1500-01-01') as date) OR '#ignore_dates_before#'='')         
              JOIN sample_attribute_values sampHabVal3 on sampHabVal3.sample_id=samp3.id AND sampHabVal3.sample_attribute_id=#habitat_attr_id# AND sampHabVal3.deleted=false         
              JOIN termlists_terms ttDirectHab3 ON ttDirectHab3.id=sampHabVal3.int_value AND ttDirectHab3.deleted=false
              JOIN termlists_terms ttBroad3 ON (ttBroad3.id=ttDirectHab3.parent_id OR (ttBroad3.id=ttDirectHab3.id AND ttDirectHab3.parent_id IS NULL)) AND ttBroad3.deleted=false
                AND (ttBroad3.id=ttBroadHab.id)
                AND ttBroad3.deleted=false   
              JOIN terms tBroad3 on tBroad3.id = ttBroad3.term_id AND tBroad3.term!='Not in scheme' AND tBroad3.deleted=false        
              JOIN surveys su3 on su3.id=samp3.survey_id AND su3.deleted=false AND (su3.id=#survey_id# OR #survey_id#=0) AND su3.id in (#limit_survey_ids#) 
              LEFT JOIN occurrences o3 on o3.sample_id=samp3.id AND o3.deleted=false
              LEFT JOIN taxa_taxon_lists ttl3 on ttl3.id=o3.taxa_taxon_list_id AND ttl3.deleted=false
              WHERE plot3.deleted=false
              GROUP BY plot3.id) plot_counts
         ON plot_counts.plot_id=plot2.id
         WHERE plot2.deleted=false
         GROUP BY plot2.id,plot_counts.count) as counts)"   
    />
    <column name='stand_deviation' display='Standard Deviation' sql="
      (select round(stddev(count_richness_per_plot),2)
         FROM
         (select plot2.id as plot_id, plot_counts.count as count_richness_per_plot
           FROM locations plot2
           JOIN samples samp2 on samp2.location_id=plot2.id AND samp2.deleted=false
             AND (samp2.date_start &gt;= CAST(COALESCE('#ignore_dates_before#','1500-01-01') as date) OR '#ignore_dates_before#'='')
           JOIN sample_attribute_values sampHabVal2 on sampHabVal2.sample_id=samp2.id AND sampHabVal2.sample_attribute_id=#habitat_attr_id# AND sampHabVal2.deleted=false
           JOIN termlists_terms ttDirectHab2 ON ttDirectHab2.id=sampHabVal2.int_value AND ttDirectHab2.deleted=false
           JOIN termlists_terms ttBroad2 ON (ttBroad2.id=ttDirectHab2.parent_id OR (ttBroad2.id=ttDirectHab2.id AND ttDirectHab2.parent_id IS NULL)) AND ttBroad2.deleted=false
             AND (ttBroad2.id=ttBroadHab.id)
             AND ttBroad2.deleted=false
           JOIN terms tBroad2 on tBroad2.id = ttBroad2.term_id AND tBroad2.term!='Not in scheme' AND tBroad2.deleted=false 
           JOIN surveys su2 on su2.id=samp2.survey_id AND su2.deleted=false
             AND (su2.id=#survey_id# OR #survey_id#=0) AND su2.id in (#limit_survey_ids#) 

           LEFT JOIN

            (select plot3.id as plot_id, count(distinct ttl3.taxon_meaning_id) as count
              FROM locations plot3
              JOIN samples samp3 on samp3.location_id = plot3.id AND samp3.deleted=false
                AND (samp3.date_start >= CAST(COALESCE('#ignore_dates_before#','1500-01-01') as date) OR '#ignore_dates_before#'='')         
              JOIN sample_attribute_values sampHabVal3 on sampHabVal3.sample_id=samp3.id AND sampHabVal3.sample_attribute_id=#habitat_attr_id# AND sampHabVal3.deleted=false         
              JOIN termlists_terms ttDirectHab3 ON ttDirectHab3.id=sampHabVal3.int_value AND ttDirectHab3.deleted=false
              JOIN termlists_terms ttBroad3 ON (ttBroad3.id=ttDirectHab3.parent_id OR (ttBroad3.id=ttDirectHab3.id AND ttDirectHab3.parent_id IS NULL)) AND ttBroad3.deleted=false
                AND (ttBroad3.id=ttBroadHab.id)
                AND ttBroad3.deleted=false     
              JOIN terms tBroad3 on tBroad3.id = ttBroad3.term_id AND tBroad3.term!='Not in scheme' AND tBroad3.deleted=false   
              JOIN surveys su3 on su3.id=samp3.survey_id AND su3.deleted=false AND (su3.id=#survey_id# OR #survey_id#=0) AND su3.id in (#limit_survey_ids#) 
              LEFT JOIN occurrences o3 on o3.sample_id=samp3.id AND o3.deleted=false
              LEFT JOIN taxa_taxon_lists ttl3 on ttl3.id=o3.taxa_taxon_list_id AND ttl3.deleted=false
              WHERE plot3.deleted=false
              GROUP BY plot3.id) plot_counts
         ON plot_counts.plot_id=plot2.id
         WHERE plot2.deleted=false
         GROUP BY plot2.id,plot_counts.count) as counts)"   
    />       
  </columns>
</report>

