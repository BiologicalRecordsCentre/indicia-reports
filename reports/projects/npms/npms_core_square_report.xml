<?xml version="1.0" encoding="UTF-8"?>
<report title="NPMS core square plots summary" description="Todo description">
  <query>
    SELECT 
      l.id as id,
      l.name as name,
      t.term as plot_type,
      count(distinct(csf.id)) as samples,
	    count(distinct(csf.date_start)) as dates,
      min(csf.date_start) as earliest,
      max(csf.date_end) as latest,
      null as record_status,
      count(distinct(cof.id)) as records,
      count(distinct(cof.taxon_meaning_id)) as taxa,
      string_agg(distinct(s.title), ', ') as surveys,
      l.comment as comment,
      ST_AsGeoJSON(st_transform(l.centroid_geom, 4326)) as centroid_geom,
      ST_AsGeoJSON(st_transform(l.boundary_geom, 4326)) as boundary_geom
    FROM locations l
      LEFT JOIN locations_websites lw on lw.location_id = l.id AND lw.deleted = false AND lw.id = 32
      LEFT JOIN locations lp on lp.id = l.parent_id
      LEFT JOIN cache_samples_functional csf on csf.location_id = l.id
      LEFT JOIN termlists_terms tt on tt.id = l.location_type_id
      LEFT JOIN terms t on t.id = tt.term_id
      LEFT JOIN cache_occurrences_functional cof on cof.sample_id = csf.id
      LEFT JOIN surveys s on s.id = csf.survey_id
    WHERE lp.name = '#gr#'
      AND lp.location_type_id = 4009
    GROUP BY l.id, l.name, l.comment, t.term,
      ST_AsGeoJSON(st_transform(l.centroid_geom, 4326)), 
      ST_AsGeoJSON(st_transform(l.boundary_geom, 4326))
	UNION
	SELECT 
      null as id,
      l.name as name,
      null as plot_type,
      null as samples,
	  null as dates,
      null as earliest,
      null as latest,
      cof.record_status as record_status,
      count(distinct(cof.id)) as records, 
      null as taxa,
      null as surveys,
      null as comment,
      null as centroid_geom,
      null as boundary_geom
    FROM locations l
      LEFT JOIN locations_websites lw on lw.location_id = l.id AND lw.deleted = false AND lw.id = 32
      LEFT JOIN locations lp on lp.id = l.parent_id
      LEFT JOIN cache_samples_functional csf on csf.location_id = l.id
      LEFT JOIN cache_occurrences_functional cof on cof.sample_id = csf.id
    WHERE lp.name = '#gr#'
      AND lp.location_type_id = 4009
    GROUP BY l.name, cof.record_status
    UNION
    SELECT 
      lp.id as id,
      lp.name as name,
      null as plot_type,
      count(distinct(csf.id)) as samples,
	  count(distinct(csf.date_start)) as dates,
      min(csf.date_start) as earliest,
      max(csf.date_end) as latest,
      null as record_status,
      count(distinct(cof.id)) as records,
      count(distinct(cof.taxon_meaning_id)) as taxa,
      string_agg(distinct(s.title), ', ') as surveys,
      null as comment,
      ST_AsGeoJSON(st_transform(lp.centroid_geom, 4326)) as centroid_geom,
      ST_AsGeoJSON(st_transform(lp.boundary_geom, 4326)) as boundary_geom
    FROM locations lp
      LEFT JOIN locations_websites lw on lw.location_id = lp.id AND lw.deleted = false AND lw.id = 32
      LEFT JOIN locations l on l.parent_id = lp.id
      LEFT JOIN cache_samples_functional csf on csf.location_id = l.id
      LEFT JOIN cache_occurrences_functional cof on cof.sample_id = csf.id
      LEFT JOIN surveys s on s.id = csf.survey_id
    WHERE lp.name = '#gr#'
      and lp.location_type_id = 4009
    GROUP BY lp.id, lp.name,
      ST_AsGeoJSON(st_transform(lp.centroid_geom, 4326)),
      ST_AsGeoJSON(st_transform(lp.boundary_geom, 4326))
	  UNION
    SELECT 
      null as id,
      lp.name as name,
      null as plot_type,
      null as samples,
	    null as dates,
      null as earliest,
      null as latest,
      cof.record_status as record_status,
      count(distinct(cof.id)) as records,
      null as taxa,
      null as surveys,
      null as comment,
      null as centroid_geom,
      null as boundary_geom
    FROM locations lp
      LEFT JOIN locations_websites lw on lw.location_id = lp.id AND lw.deleted = false AND lw.id = 32
      LEFT JOIN locations l on l.parent_id = lp.id
      LEFT JOIN cache_samples_functional csf on csf.location_id = l.id
      LEFT JOIN cache_occurrences_functional cof on cof.sample_id = csf.id
    WHERE lp.name = '#gr#'
      and lp.location_type_id = 4009
    GROUP BY lp.name, cof.record_status
  </query>
  <params>
    <param name="gr" display="Core square grid ref" description="Monad grid ref of core square" datatype="text"></param>
  </params>
  <columns>
    <column name="name" display="Plot name" />
    <column name="plot_type" display="Plot type" />
    <column name="samples" display="Number of samples" />
    <column name="dates" display="Number of dates" />
    <column name="earliest" display="Earliest visit date" />
    <column name="latest" display="Latest visit date" />
    <column name="records" display="Number of records" />
    <column name="taxa" display="Number of taxa" />
    <column name="comment" display="Comment when plot defined" />
    <column name="centroid_geom" display="Centroid geometry" />
    <column name="boundary_geom" display="Boundary geometry" />
  </columns>
</report>