<report
    title="Unapproved square allocations 3"
    description="Squares which users have allocated to themselves need to be listed for approval."
>
  <query website_filter_field="lw.website_id">
  SELECT #columns#
  FROM person_attribute_values pav 
  JOIN locations l on l.id=pav.int_value AND l.deleted=false
  LEFT JOIN locations_websites lw on lw.location_id=l.id AND lw.deleted=false
  JOIN users u on u.person_id=pav.person_id AND u.id=pav.updated_by_id AND u.deleted=false
  JOIN people p on p.id=u.person_id AND p.deleted=false
  LEFT JOIN users_websites accesscheck on accesscheck.website_id=lw.website_id
    AND accesscheck.user_id=#auth_user_id# AND accesscheck.site_role_id&lt;3
  WHERE pav.person_attribute_id=#user_square_attr_id# AND pav.deleted=false
  AND #website_filter#
  </query>
  <order_bys>
    <order_by>pav.id ASC</order_by>
  </order_bys>
  <params>
    <param name='user_square_attr_id' display='Id of the person attribute that holds user squares' description='' datatype='integer'/>
    <param name="ignore_registration_dates_before" display="Ignore Registration Dates Before" description="Ignore anyone who registered earlier than this date
        where working out if a square has been allocated or not." datatype="date" emptyvalue="" default=""/>
    <param name="ignore_square_dates_before" display="Ignore Square Dates Before" description="Ignore any squares created before this date.
        Useful if old squares are left on the system but are not currently active." datatype="date" emptyvalue="" default="">
      <where>l.created_on &gt;= CAST(COALESCE('#ignore_square_dates_before#','1500-01-01') as date)</where>
    </param>
    <param name="auth_user_id" datatype="integer" default="-1" />
  </params>
  <columns> 
    <column name='id' sql='pav.id' datatype='integer' in_count="true"/>  
    <column name='location' display='location' sql="regexp_replace(l.centroid_sref, ',[^ ]', ', ', 'g')" datatype='text' />
    <column name='user' sql='u.username' display='Username' datatype='text'/>
    <column name='email' sql='CASE WHEN accesscheck.id IS NULL THEN NULL ELSE p.email_address END' display='Email' datatype='text'/>
    <column name='allocation_updater' display='Person who updated allocation' sql="pav.updated_by_id" datatype='integer' visible="false"/>
    <column name='allocated_to' display='Person who allocation is for' sql="u.id" datatype='integer' visible="false"/>
  </columns>
</report>