<report
    title="Explore records using standard filters - lores mapping - for CEDaR"
    description="Report designed for mapping on the explore records facility in CEDaR, with standardised filtering parameters. Aggregated to grid squares.
Thie is different to filterable_explore_list_mapping_lores as a taxon_list_id can be supplied as a filter."
>
  <query website_filter_field="o.website_id" samples_id_field="o.sample_id" standard_params="true">
  SELECT #columns#
  FROM cache_occurrences o
  JOIN websites w on w.id=o.website_id and w.deleted=false
  #agreements_join#
  #joins#
  WHERE #sharing_filter# 
  #idlist#
  </query>
  <params>
    <param name='taxon_list_id' display='Taxon list id' description='Taxon list to limit report to' datatype='integer' emptyvalue='' default=''>
      <join>JOIN taxa_taxon_lists ttl on ttl.id = o.taxa_taxon_list_id AND ttl.taxon_list_id=#taxon_list_id# AND ttl.deleted=false</join>
    </param>
    <param name='default_input_form' display='Default input form' description='Input form path to use when no other available' default='' />
    <param name="sq_size" display="Grid square size" description="Specify either 1000, 2000 or 10000 for the grid square resolution as 1km, 2km or 10km grid" datatype="integer">
      <joins>
        <join value="1000" operator="equal">JOIN map_squares msq on msq.id=o.map_sq_1km_id and msq.size=1000</join>
        <join value="2000" operator="equal">JOIN map_squares msq on msq.id=o.map_sq_2km_id and msq.size=2000</join>
        <join value="10000" operator="equal">JOIN map_squares msq on msq.id=o.map_sq_10km_id and msq.size=10000</join>
      </joins>
    </param>
    <param name="bounds" display="Bounds WKT" description="Well known text for the bounding box to load" datatype="text" default="">
      <where>st_intersects(msq.geom, st_geomfromtext('#bounds#', 900913))</where>
    </param>
  </params>
  <columns>
    <column name='occurrence_id' sql='o.id' on_demand="true" datatype="integer" />
    <column name='source' on_demand="true" datatype="text" 
        sql="w.title || ' | ' || case when substring(o.survey_title from 1 for length(w.title)) = w.title then trim(substring(o.survey_title from length(w.title)+1)) else o.survey_title end" />
    <column name='source_id' on_demand="true" datatype="text" sql="o.website_id::varchar || '.' || o.survey_id::varchar" />
    <column name='sample_id' sql='o.sample_id' on_demand="true" datatype="integer" />
    <column name='taxon' sql="o.preferred_taxon" on_demand="true" datatype="species" />
    <column name='common' sql="o.default_common_name" on_demand="true" datatype="text" />
    <column name='taxon_group' sql='o.taxon_group' on_demand="true" datatype="text" />
    <column name='taxon_group_id' sql='o.taxon_group_id' on_demand="true" datatype="integer" />
    <column name='taxa_taxon_list_id' sql='o.taxa_taxon_list_id' on_demand="true" datatype="integer" />    
    <column name='location_name' sql='o.location_name' on_demand="true" datatype="text" />
    <column name='entered_sref' sql="coalesce(o.public_entered_sref, regexp_replace(#sample_sref_field#, ',[^ ]', ', ', 'g'))" on_demand="true" datatype="text" />
    <column name='date_start' sql='o.date_start' on_demand="true" visible='false' />
    <column name='date_end' sql='o.date_end' on_demand="true" visible='false' />
    <column name='date_type' sql='o.date_type' on_demand="true" visible='false' />
    <column name='date' on_demand="true" datatype="date" />
    <column name='cache_created_on' sql='o.cache_created_on' on_demand="true" datatype="date" />
    <column name='cache_updated_on' sql='o.cache_updated_on' on_demand="true" />
    <column name='recorder' on_demand="true" sql="CASE WHEN LENGTH(o.recorders)>30 THEN 'Recorder' ELSE o.recorders END" datatype="text" />
    <column name='created_by_id' visible='false' sql='o.created_by_id' on_demand="true" datatype="integer" />
    <column name='input_form' visible="false" sql="case when o.input_form is null then '#default_input_form#' else o.input_form end" on_demand="true" datatype="text" />
    <column name="occurrence_ids" visible="false" sql="array_to_string(array_agg(o.id), ',')" aggregate="true" />
    <column name="taxon_meaning_ids" visible="false" sql="array_to_string(array_agg(distinct o.taxon_meaning_id), ',')" aggregate="true" />
    <column name="geom" visible="false" mappable="true" sql="st_astext(msq.geom)" in_count="true" />
  </columns>
</report>