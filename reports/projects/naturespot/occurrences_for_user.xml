<report
    title="Occurrence images for any species"
    description="Lists the images uploaded for occurrences for any species."
    row_class="biota"
>
  <query>
  SELECT DISTINCT #columns#
  FROM cache_occurrences_functional o
  JOIN cache_occurrences_nonfunctional onf on onf.id=o.id
  JOIN cache_samples_nonfunctional snf on snf.id=o.sample_id
  JOIN cache_taxa_taxon_lists cttl on cttl.id=o.taxa_taxon_list_id
  LEFT JOIN occurrence_comments ocv on ocv.occurrence_id=o.id and ocv.deleted=false
    and ocv.record_status=o.record_status and coalesce(ocv.record_substatus, 0)=coalesce(o.record_substatus, 0)
  WHERE o.website_id=8
  AND o.record_status&lt;&gt;'R'
  #filters#
  </query>
  <order_bys>
    <order_by>o.id /* don't optimise */ DESC</order_by>
  </order_bys>
  <params>
     <param name='taxon_group_id' display='Taxon Group' datatype='lookup' population_call='report:projects/naturespot/used_taxon_groups:id:title'>
      <where>o.taxon_group_id=#taxon_group_id#</where>
    </param>
    <param name='site_name' display='Site name contains' datatype='text'>
      <where>o.location_name ilike '%#site_name#%'</where>
    </param>
    <param name="date_from" display="Date From" datatype="date">
      <where>o.date_start&gt;='#date_from#'</where>
    </param>
    <param name="date_to" display="Date To" datatype="date">
      <where>o.date_start&lt;='#date_to#'</where>
    </param>
    <param name='user_id' display='User Id' datatype='integer'>
      <where>o.created_by_id=#user_id#</where>
    </param>
  </params>
  <columns>
    <column name='website_id' visible='false' sql="o.website_id" datatype="integer" />
    <column name='external_key' visible='false' sql="o.taxa_taxon_list_external_key" datatype="text" />
    <column name='occurrence_id' display='ID' sql="o.id" datatype="integer" in_count="true" />
    <column name='taxon_group' display='Group' sql="cttl.taxon_group" datatype="text" />
    <column name='taxon' display='Latin Name' class='sci binomial' sql="cttl.preferred_taxon" datatype="text" />
    <column name='common' display='Common Name' class='vernacular' sql="cttl.default_common_name" datatype="text" />
    <column name='date_start' sql='o.date_start' visible='false' />
    <column name='date_end' sql='o.date_end' visible='false' />
    <column name='date_type' sql='o.date_type' visible='false' />
    <column name='date' display='Date' datatype='date' />
    <column name='entered_sref' display='Grid Ref.' sql="snf.public_entered_sref" datatype="text" />
    <column name='location_name' display='Site Name' sql="o.location_name" datatype="text" />
    <column name='confidence' display='Confidence' sql="COALESCE(onf.attr_certainty, 'Certain')" datatype="text" />
	<column name='abundance' display='Abundance' sql="onf.attr_sex_stage_count" datatype="text" />
	<column name='record_substatus' visible="false" sql="o.record_substatus" />
	<column name='record_status' display='Verification' sql="o.record_status" datatype="text"
      template='&lt;span class="status-icon status-{record_status} release-{release_status} substatus-{record_substatus} query-{query} certainty-{certainty}" title="{status_hint}"&gt;&lt;/span&gt;&lt;span class="record-id"&gt;&amp;nbsp;&lt;/span&gt;'  />
    <column name='status_hint' display="Verification status"
            sql="case o.record_status when 'V' then 'Accepted' when 'R' then 'Not accepted' when 'T' then 'Test'
              when 'C' then case when o.record_substatus=3 then 'Plausible' when o.certainty='C' then 'Recorder considered this certain' when o.certainty='L' then 'Recorder considered this likely' when o.certainty='U' then 'Recorder considered this uncertain' else 'Not reviewed' end
            end ||
            case o.record_substatus when 1 then ' as correct' when 2 then ' as considered correct' when 4 then ' as unable to verify' when 5 then ' as incorrect' else '' end ||
            case o.query when 'A' then ', query raised and answered' when 'Q' then ', query raised' else '' end" />
    <column name='verifier' display='Verifier' sql="onf.verifier" datatype="text" />
	<column name='verifier_comment' display='Verifier comment' sql="string_agg(ocv.comment, '; ')" datatype="text" aggregate="true" />
	<column name="occurrence_comment" display="Comment" sql="onf.comment" datatype="text" />
	<column name="sample_comment" display="Form comment" sql="snf.comment" datatype="text" />
  </columns>
</report>