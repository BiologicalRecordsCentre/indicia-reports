<report
    title="NatureSpot Download range of records (v2)"
    description="Download NatureSpot Occurrences."
    row_class="biota"
>
  <query website_filter_field="o.website_id" samples_id_field="o.sample_id"
         standard_params="occurrences" count_field="o.*">
    SELECT #columns#
    FROM cache_occurrences_functional o
    JOIN cache_occurrences_nonfunctional onf on onf.id=o.id
    JOIN cache_samples_nonfunctional snf on snf.id=o.sample_id
    JOIN cache_taxa_taxon_lists cttl on cttl.id=o.taxa_taxon_list_id
    JOIN users u ON u.id=o.created_by_id
    JOIN people p ON p.id=u.person_id
    #agreements_join#
    #joins#
    WHERE #sharing_filter#
    AND o.website_id=8
    #idlist#
  </query>
  <params>
    <param name='from_id' display='Start Record ID' description='Enter the ID of the first record in the range to include.' datatype='integer'>
      <where>o.id&gt;=#from_id#</where>
    </param>
    <param name='to_id' display='End Record ID' description='Enter the ID of the last record in the range to include.' datatype='integer'>
      <where>o.id&lt;=#to_id#</where>
    </param>
    <param name="status" display="Status" description="Filter on verification status" datatype="lookup"
           lookup_values="all:All records,V:Accepted only,C:Pending review only">
      <where value="V" operator="equal">o.record_status='V'</where>
      <where value="C" operator="equal">o.record_status='C' and o.record_substatus is null</where>
    </param>
    <param name='site' display='Wild place' datatype='lookup' population_call='direct:location:id:name:website_id=8,location_type_id=14'>
      <join>JOIN locations lfilt on st_intersects(lfilt.boundary_geom, o.public_geom) and lfilt.location_type_id=14 and lfilt.deleted=false and lfilt.id=#site#
      JOIN locations_websites lw on lw.location_id=lfilt.id and lw.deleted=false and lw.website_id=8</join>
    </param>
    <param name='parish' display='Site' datatype='lookup' population_call='direct:location:id:name:website_id=8,location_type_id=702'>
      <join>JOIN locations lfiltp on st_intersects(lfiltp.boundary_geom, o.public_geom) and lfiltp.location_type_id=702 and lfiltp.deleted=false and lfiltp.id=#parish#
      JOIN locations_websites lwp on lwp.location_id=lfiltp.id and lwp.deleted=false and lwp.website_id=8</join>
    </param>
  </params>
  <columns>
    <column name="occurrence_id" display="Record ID" sql="o.id" datatype="integer" />
    <column name="taxon_group" display="Taxon Group" sql="cttl.taxon_group" datatype="text" />
    <column name="input_species" display="Input species" sql="cttl.taxon" datatype="species" />
    <column name="latin_species" display="Latin" sql="cttl.preferred_taxon" datatype="species" />
    <column name="common_species" display="Common" sql="cttl.default_common_name" datatype="text" />
    <column name="external_key" display="NBN Key" sql="cttl.external_key" datatype="text" />
    <column name="date" display="Date" datatype="date" />
    <column name="date_start" sql="o.date_start" visible="false" />
    <column name="date_end" sql="o.date_end" visible="false" />
    <column name="date_type" sql="o.date_type" visible="false" />
    <column name="grid_ref" display="Grid Ref" sql="snf.public_entered_sref" datatype="text" />
    <column name="location_name" display="Location Name" sql="o.location_name" datatype="text" />
    <column name="vc" display="VC Code" sql="(SELECT string_agg(vc.code || ': ' || vc.name, '; ')
      FROM locations vc
      WHERE o.location_ids @> ARRAY[vc.id] and vc.location_type_id=15 and vc.deleted=false)" datatype="text" />
    <column name="recorders" display="Recorder" sql="rtrim(snf.recorders, ', ')" datatype="text" />
    <column name="email_address" display="Email" sql="p.email_address" datatype="text" />
    <column name="warehouse_user_id" display="Warehouse user ID" sql="o.created_by_id" datatype="integer" />
    <column name="determiner" display="Determiner" datatype="text"
      sql="CASE WHEN onf.attr_det_full_name IS NULL THEN
        CASE WHEN onf.attr_det_last_name IS NULL THEN NULL ELSE onf.attr_det_last_name || COALESCE(', ' || onf.attr_det_first_name, '') END
      ELSE onf.attr_det_full_name END" />
    <column name="confidence" display="Confidence" sql="onf.attr_certainty" datatype="text" />
    <column name="abundance" display="Abundance" sql="onf.attr_sex_stage_count" datatype="text" />
    <column name="record_comment" display="Record comment" sql="onf.comment" datatype="text" />
    <column name="sample_comment" display="Sample comment" sql="snf.comment" datatype="text" />
    <column name="input_date" sql="o.created_on" display="Input on date" datatype="date" />
    <column name="last_edit_date" sql="o.updated_on" display="Last changed date" datatype="date" />
    <column name="record_status" display="Record status" sql="case o.record_status || coalesce(o.record_substatus::varchar, '')
  when 'V' then 'accepted'
  when 'V1' then 'accepted as correct'
  when 'V2' then 'accepted as considered correct'
  when 'C' then 'not reviewed'
  when 'C3' then 'plausible'
  when 'D' then 'queried'
  when 'R' then 'not accepted'
  when 'R4' then 'not accepted as unable to review'
  when 'R5' then 'not accepted as incorrect'
end"/>
    <column name="query_status" display="Query status" sql="o.query" datatype="text" />
    <column name='verifier' display='Verifier' sql='onf.verifier' datatype="text" />
    <column name='verified_on' display='Verified on' sql='o.verified_on' datatype="text" />
    <column name="verifier_comment" display="Verifier comment"
      sql="(SELECT string_agg(oc.comment, '; ') FROM occurrence_comments oc
        WHERE oc.occurrence_id=o.id AND oc.deleted=false AND oc.record_status IS NOT NULL)" />
    <column name="record_link" display="Record link"
      sql="'https://www.brc.ac.uk/irecord/record-details?occurrence_id=' || o.id::varchar" />
    <column name="group_title" display="Project" sql="snf.group_title" datatype="text" />
  </columns>
</report>